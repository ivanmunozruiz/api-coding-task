openapi: 3.0.0
info:
  title: LOTR API
  description: API para gestionar personajes, facciones y equipamiento de El Señor de los Anillos.
  version: 1.0.0
  contact:
    name: Soporte LOTR API
    url: http://localhost:8080/support
    email: ivan.sazo@gmail.com

servers:
  - url: http://localhost:8080/api
    description: Servidor local
components:
  securitySchemes:
    AuthToken:
      type: apiKey
      in: header
      name: X-AUTH-TOKEN
security:
  - AuthToken: []

tags:
  - name: Characters
    description: Operaciones relacionadas con los personajes

paths:
  /health-check:
    get:
      summary: Comprobar el estado de la API
      description: Devuelve un mensaje de éxito si la API está en funcionamiento.
      operationId: healthCheck
      tags:
        - Health Check
      responses:
        '200':
          description: API en funcionamiento
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_zone:
                    type: string
                    example: "UTC"
                  updated_at:
                    type: string
                    format: date-time
                    example: "2024-10-07T17:24:38.641+00:00"
                  environment:
                    type: string
                    example: "dev"
                  logger:
                    type: string
                    example: "OK"
                  database:
                    type: string
                    example: "OK"
                  status:
                    type: string
                    example: "OK"
                  timestamp:
                    type: string
                    format: timestamp
                    example: "1728321878"
                  migrations:
                    type: string
                    example: "OK"
  /v1/characters:
    get:
      summary: Obtener todos los personajes
      description: Devuelve una lista de todos los personajes disponibles.
      operationId: getCharacters
      tags:
        - Characters
      parameters:
        - name: limit
          in: query
          required: false
          description: Límite de personajes a devolver. Si no se especifica, por defecto son 10.
          schema:
            type: integer
      responses:
        '200':
          description: Lista de personajes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    birth_date:
                      type: string
                      format: date
                    kingdom:
                      type: string
                    equipment_id:
                      type: integer
                    faction_id:
                      type: integer

    post:
      summary: Crear un nuevo personaje
      description: Crea un nuevo personaje en la base de datos.
      operationId: createCharacter
      tags:
        - Characters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
                birth_date:
                  type: string
                  format: date
                kingdom:
                  type: string
                equipment_id:
                  type: string
                  format: uuid
                faction_id:
                  type: string
                  format: uuid
      responses:
        '201':
          description: Personaje creado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                      type: string
                      format: uuid
                  name:
                    type: string
                  birth_date:
                    type: string
                    format: date
                  kingdom:
                    type: string
                  equipment_id:
                      type: string
                      format: uuid
                  faction_id:
                      type: string
                      format: uuid

  /v1/characters/{id}:
    get:
      summary: Obtener un personaje por ID
      description: Devuelve un personaje específico basado en su ID.
      operationId: getCharacterById
      tags:
        - Characters
      parameters:
        - name: id
          in: path
          required: true
          description: El ID del personaje que se desea obtener.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Personaje encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                      type: string
                      format: uuid
                  name:
                    type: string
                  birth_date:
                    type: string
                    format: date
                  kingdom:
                    type: string
                  equipment_id:
                      type: string
                      format: uuid
                  faction_id:
                      type: string
                      format: uuid
        '404':
          description: Personaje no encontrado

    put:
      summary: Actualizar un personaje
      description: Actualiza la información de un personaje existente.
      operationId: updateCharacter
      tags:
        - Characters
      parameters:
        - name: id
          in: path
          required: true
          description: El ID del personaje que se desea actualizar.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                birth_date:
                  type: string
                  format: date
                kingdom:
                  type: string
                equipment_id:
                  type: string
                  format: uuid
                faction_id:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Personaje actualizado
        '404':
          description: Personaje no encontrado

    delete:
      summary: Eliminar un personaje
      description: Elimina un personaje de la base de datos.
      operationId: deleteCharacter
      tags:
        - Characters
      parameters:
        - name: id
          in: path
          required: true
          description: El ID del personaje que se desea eliminar.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Personaje eliminado
        '404':
          description: Personaje no encontrado
  /v1/factions:
    get:
      summary: Obtener todos los factions
      description: Devuelve una lista de todos los factions disponibles.
      operationId: getFactions
      tags:
        - Factions
      parameters:
        - name: page
          in: query
          required: false
          description: Page number. Si no se especifica, por defecto son 1.
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          description: Límite de factions a devolver. Si no se especifica, por defecto son 10.
          schema:
            type: integer
      responses:
        '200':
          description: Lista de factions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    faction_name:
                      type: string
                    description:
                      type: string

    post:
      summary: Crear un nuevo faction
      description: Crea un nuevo faction en la base de datos.
      operationId: createFaction
      tags:
        - Factions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Faction creado
          content:
            application/json:
              schema:
                type: object
                properties:

  /v1/factions/{id}:
    get:
      summary: Obtener un faction por ID
      description: Devuelve un faction específico basado en su ID.
      operationId: getFactionById
      tags:
        - Factions
      parameters:
        - name: id
          in: path
          required: true
          description: El ID del faction que se desea obtener.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Faction encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                      type: string
                      format: uuid
                  faction_name:
                    type: string
                  description:
                    type: string
        '404':
          description: Faction no encontrado

    put:
      summary: Actualizar un faction
      description: Actualiza la información de un faction existente.
      operationId: updateFaction
      tags:
        - Factions
      parameters:
        - name: id
          in: path
          required: true
          description: El ID del faction que se desea actualizar.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string

      responses:
        '200':
          description: Faction actualizado
        '404':
          description: Faction no encontrado

    delete:
      summary: Eliminar un faction
      description: Elimina un faction de la base de datos.
      operationId: deleteCharacter
      tags:
        - Factions
      parameters:
        - name: id
          in: path
          required: true
          description: El ID del faction que se desea eliminar.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Faction eliminado
        '404':
          description: Faction no encontrado
  /v1/equipments:
    get:
      summary: Obtener todos los equipments
      description: Devuelve una lista de todos los equipments disponibles.
      operationId: getEquipments
      tags:
        - Equipments
      parameters:
        - name: page
          in: query
          required: false
          description: Page number. Si no se especifica, por defecto son 1.
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          description: Límite de equipments a devolver. Si no se especifica, por defecto son 10.
          schema:
            type: integer
      responses:
        '200':
          description: Lista de equipments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    type:
                      type: string
                    madeBy:
                      type: string

    post:
      summary: Crear un nuevo equipment
      description: Crea un nuevo equipment en la base de datos.
      operationId: createEquipment
      tags:
        - Equipments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                name:
                  type: string
                type:
                  type: string
                madeBy:
                  type: string
      responses:
        '201':
          description: Equipment creado
          content:
            application/json:
              schema:
                type: object
                properties:

  /v1/equipments/{id}:
    get:
      summary: Obtener un equipment por ID
      description: Devuelve un equipment específico basado en su ID.
      operationId: getEquipmentById
      tags:
        - Equipments
      parameters:
        - name: id
          in: path
          required: true
          description: El ID del equipment que se desea obtener.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Equipment encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                      type: string
                      format: uuid
                  name:
                    type: string
                  type:
                    type: string
                  madeBy:
                    type: string
        '404':
          description: Equipment no encontrado

    put:
      summary: Actualizar un equipment
      description: Actualiza la información de un equipment existente.
      operationId: updateEquipment
      tags:
        - Equipments
      parameters:
        - name: id
          in: path
          required: true
          description: El ID del equipment que se desea actualizar.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: string
                madeBy:
                  type: string

      responses:
        '200':
          description: Equipment actualizado
        '404':
          description: Equipment no encontrado

    delete:
      summary: Eliminar un equipment
      description: Elimina un equipment de la base de datos.
      operationId: deleteCharacter
      tags:
        - Equipments
      parameters:
        - name: id
          in: path
          required: true
          description: El ID del equipment que se desea eliminar.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Equipment eliminado
        '404':
          description: Equipment no encontrado