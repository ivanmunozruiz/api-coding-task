framework:
    messenger:
        transports:
          commands:
            dsn: 'sync://'
          commands_async:
            dsn: '%env(MESSENGER_TRANSPORT_DSN)%/commands'
          queries: 'sync://'
          events:
            dsn: 'sync://'
          #events_async:
          #  dsn : '%env(MESSENGER_TRANSPORT_DSN)%/api-events'
          #  serializer: App\Shared\Infrastructure\Messaging\Serializer\DomainEventSerializer
          failed: 'doctrine://default?queue_name=failed'
        failure_transport: failed

        # The bus that is going to be injected when injecting MessageBusInterface.
        default_bus: command.bus
        serializer:
          # Service id to use as the default serializer for the transports.
          default_serializer: messenger.transport.symfony_serializer
          symfony_serializer:
            format: json
            context: { }

        routing:
          App\Shared\Application\Command\Command: commands
          #App\Shared\Domain\Aggregate\DomainEvent:  events_async

        buses:
          none.bus:
            default_middleware: allow_no_handlers
          command.bus:
            middleware:
              - 'doctrine_ping_connection'
              - 'doctrine_close_connection'
              - 'send_message'
              - 'doctrine_transaction'
          query.bus: ~
          event.bus:
            default_middleware: allow_no_handlers
            middleware:
              - App\Shared\Infrastructure\Messaging\Middleware\DomainEventMiddleware
              - 'doctrine_transaction'