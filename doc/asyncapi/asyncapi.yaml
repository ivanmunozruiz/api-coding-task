asyncapi: 2.5.0
info:
  title: 'API de El Señor de los Anillos'
  version: '1.0.0'
  description: 'Una API de El Señor de los Anillos.'
  contact:
    name: 'Ivan'
    email: 'ivan.sazo@gmail.com'
  license:
    name: 'MIT'
    url: 'https://opensource.org/licenses/MIT'

servers:
  localhost:
    url: amqp://localhost:5672
    protocol: amqp
    protocolVersion: 0.9.1
    tags:
      - name: develop
        description: "This environment is only for develop purpose"
tags:
  - name: Characters
  - name: Factions
  - name: Equipments
channels:
  api-coding-task.lotr.1.domain-event.character.created:
    publish:
      tags:
        - name: Characters
      summary: Character was created
      description: This event is published when a character is created.
      operationId: api-coding-task.lotr.1.domain-event.character.created
      message:
        $ref: '#/components/messages/CharacterCreatedEvent'
  api-coding-task.lotr.1.domain-event.character.updated:
    publish:
      tags:
        - name: Characters
      summary: Character was updated
      description: This event is published when a character is updated.
      operationId: api-coding-task.lotr.1.domain-event.character.updated
      message:
        $ref: '#/components/messages/CharacterUpdatedEvent'
  api-coding-task.lotr.1.domain-event.character.deleted:
    publish:
      tags:
        - name: Characters
      summary: Character was deleted
      description: This event is published when a character is deleted.
      operationId: api-coding-task.lotr.1.domain-event.character.deleted
      message:
        $ref: '#/components/messages/CharacterDeletedEvent'
  api-coding-task.lotr.1.domain-event.faction.created:
    publish:
      tags:
        - name: Factions
      summary: Faction was created
      description: This event is published when a faction is created.
      operationId: api-coding-task.lotr.1.domain-event.faction.created
      message:
        $ref: '#/components/messages/FactionCreatedEvent'
  api-coding-task.lotr.1.domain-event.faction.updated:
    publish:
      tags:
        - name: Factions
      summary: Faction was updated
      description: This event is published when a faction is updated.
      operationId: api-coding-task.lotr.1.domain-event.faction.updated
      message:
        $ref: '#/components/messages/FactionUpdatedEvent'
  api-coding-task.lotr.1.domain-event.faction.deleted:
    publish:
      tags:
        - name: Factions
      summary: Faction was deleted
      description: This event is published when a faction is deleted.
      operationId: api-coding-task.lotr.1.domain-event.faction.deleted
      message:
        $ref: '#/components/messages/FactionDeletedEvent'
  api-coding-task.lotr.1.domain-event.equipment.created:
    publish:
      tags:
        - name: Equipments
      summary: Equipment was created
      description: This event is published when a equipment is created.
      operationId: api-coding-task.lotr.1.domain-event.equipment.created
      message:
        $ref: '#/components/messages/EquipmentCreatedEvent'
  api-coding-task.lotr.1.domain-event.equipment.updated:
    publish:
      tags:
        - name: Equipments
      summary: Equipment was updated
      description: This event is published when a equipment is updated.
      operationId: api-coding-task.lotr.1.domain-event.equipment.updated
      message:
        $ref: '#/components/messages/EquipmentUpdatedEvent'
  api-coding-task.lotr.1.domain-event.equipment.deleted:
    publish:
      tags:
        - name: Equipments
      summary: Equipment was deleted
      description: This event is published when a equipment is deleted.
      operationId: api-coding-task.lotr.1.domain-event.equipment.deleted
      message:
        $ref: '#/components/messages/EquipmentDeletedEvent'
components:
  messages:
    CharacterCreatedEvent:
      name: api-coding-task.lotr.1.domain-event.character.created
      title: Character was created
      summary: Character was created
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/CharacterCreated'
    CharacterUpdatedEvent:
      name: api-coding-task.lotr.1.domain-event.character.updated
      title: Character was updated
      summary: Character was updated
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/CharacterUpdated'
    CharacterDeletedEvent:
      name: api-coding-task.lotr.1.domain-event.character.deleted
      title: Character was deleted
      summary: Character was deleted
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/CharacterDeleted'
    FactionCreatedEvent:
      name: api-coding-task.lotr.1.domain-event.faction.created
      title: Faction was created
      summary: Faction was created
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/FactionCreated'
    FactionUpdatedEvent:
      name: api-coding-task.lotr.1.domain-event.faction.updated
      title: Faction was updated
      summary: Faction was updated
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/FactionUpdated'
    FactionDeletedEvent:
      name: api-coding-task.lotr.1.domain-event.faction.deleted
      title: Faction was deleted
      summary: Faction was deleted
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/FactionDeleted'
    EquipmentCreatedEvent:
      name: api-coding-task.lotr.1.domain-event.equipment.created
      title: Equipment was created
      summary: Equipment was created
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/EquipmentCreated'
    EquipmentUpdatedEvent:
      name: api-coding-task.lotr.1.domain-event.equipment.updated
      title: Equipment was updated
      summary: Equipment was updated
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/EquipmentUpdated'
    EquipmentDeletedEvent:
      name: api-coding-task.lotr.1.domain-event.equipment.deleted
      title: Equipment was deleted
      summary: Equipment was deleted
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/commonHeaders'
      payload:
        $ref: '#/components/schemas/EquipmentDeleted'
  schemas:
    CharacterCreated:
        $ref: "./fields/character/character-payload.yaml"
    CharacterUpdated:
        $ref: "./fields/character/character-payload.yaml"
    CharacterDeleted:
        $ref: "./fields/character/character-payload.yaml"
    FactionCreated:
        $ref: "./fields/faction/faction-payload.yaml"
    FactionUpdated:
        $ref: "./fields/faction/faction-payload.yaml"
    FactionDeleted:
        $ref: "./fields/faction/faction-payload.yaml"
    EquipmentCreated:
        $ref: "./fields/equipment/equipment-payload.yaml"
    EquipmentUpdated:
        $ref: "./fields/equipment/equipment-payload.yaml"
    EquipmentDeleted:
        $ref: "./fields/equipment/equipment-payload.yaml"
  messageTraits:
    commonHeaders:
      bindings:
        amqp:
          is: routingKey
          exchange:
            type: topic
      headers:
        type: object
        required:
          - application_id
          - message_id
          - message_version
          - occurred_on
        properties:
          application_id:
            $ref: "./message-traits/headers/application_id.yaml"
          message_id:
            $ref: "./message-traits/headers/message_id.yaml"
          message_version:
            $ref: "./message-traits/headers/message_version.yaml"
          occurred_on:
            $ref: "./message-traits/headers/occurred_on.yaml"